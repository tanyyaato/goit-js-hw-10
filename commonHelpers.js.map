{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\n// calendar library\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n// alert library\n// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\n//\nconst inputEl = document.getElementById('datetime-picker');\nconst button = document.querySelector('button');\nbutton.setAttribute('disabled', '');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet intervalId = null;\nflatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    if (selectedDates[0].getTime() > Date.now()) {\n      userSelectedDate = selectedDates[0].getTime();\n      button.removeAttribute('disabled');\n      console.log('userSelectedDate', userSelectedDate);\n    } else {\n      button.setAttribute('disabled', '');\n      alert('Please choose a date in the future');\n    }\n  },\n});\n\nbutton.addEventListener('click', () => {\n  if (userSelectedDate) {\n    button.setAttribute('disabled', '');\n    inputEl.setAttribute('disabled', '');\n  }\n  intervalId = setInterval(timer, 1000);\n});\n//\nfunction timer(intervalId) {\n  const currentTime = Date.now();\n  const difference = userSelectedDate - currentTime;\n  const { days, hours, minutes, seconds } = convertMs(difference);\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n  if (difference <= 0) {\n    clearInterval(intervalId);\n    daysEl.textContent = '00';\n  hoursEl.textContent = '00';\n  minutesEl.textContent = '00';\n  secondsEl.textContent = '00';\n    inputEl.removeAttribute('disabled');\n    return;\n  }\n}\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n//  my code is up\n// Глобальная переменная для выбранной даты\n// let userSelectedDate = null;\n// let intervalId = null;\n\n// const inputEl = document.getElementById('datetime-picker');\n// const button = document.querySelector('button');\n// button.setAttribute('disabled', '');\n// const daysEl = document.querySelector('[data-days]');\n// const hoursEl = document.querySelector('[data-hours]');\n// const minutesEl = document.querySelector('[data-minutes]');\n// const secondsEl = document.querySelector('[data-seconds]');\n\n// // Инициализация плагина Flatpickr\n// flatpickr('#datetime-picker', {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n\n//   onClose(selectedDates) {\n//     if (selectedDates[0].getTime() > Date.now()) {\n//       userSelectedDate = selectedDates[0].getTime();\n//       button.removeAttribute('disabled');\n//     } else {\n//       button.setAttribute('disabled', '');\n//       alert('Пожалуйста, выберите дату в будущем');\n//     }\n//   },\n// });\n\n// // Обработчик клика по кнопке\n// button.addEventListener('click', () => {\n//   if (userSelectedDate) {\n//     button.setAttribute('disabled', '');\n//     inputEl.setAttribute('disabled', '');\n\n//     if (intervalId) {\n//       clearInterval(intervalId);\n//     }\n\n//     intervalId = setInterval(updateTimer, 1000);\n//   }\n// });\n\n// // Функция для обновления таймера\n// function updateTimer() {\n//   const now = Date.now();\n//   const ms = userSelectedDate - now;\n\n//   if (ms <= 0) {\n//     clearInterval(intervalId);\n//     daysEl.textContent = '00';\n//     hoursEl.textContent = '00';\n//     minutesEl.textContent = '00';\n//     secondsEl.textContent = '00';\n//     return;\n//   }\n\n//   const { days, hours, minutes, seconds } = convertMs(ms);\n//   daysEl.textContent = addLeadingZero(days);\n//   hoursEl.textContent = addLeadingZero(hours);\n//   minutesEl.textContent = addLeadingZero(minutes);\n//   secondsEl.textContent = addLeadingZero(seconds);\n// }\n\n// // Функция для преобразования миллисекунд в дни, часы, минуты и секунды\n// function convertMs(ms) {\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   const days = Math.floor(ms / day);\n//   const hours = Math.floor((ms % day) / hour);\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n\n// // Функция для добавления ведущего нуля\n// function addLeadingZero(value) {\n//   return String(value).padStart(2, '0');\n// }\n"],"names":["inputEl","button","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","flatpickr","selectedDates","timer","intervalId","currentTime","difference","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"wIAQA,MAAMA,EAAU,SAAS,eAAe,iBAAiB,EACnDC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,aAAa,WAAY,EAAE,EAClC,MAAMC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KAEvBC,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EACxBA,EAAc,CAAC,EAAE,QAAO,EAAK,KAAK,OACpCF,EAAmBE,EAAc,CAAC,EAAE,QAAO,EAC3CP,EAAO,gBAAgB,UAAU,EACjC,QAAQ,IAAI,mBAAoBK,CAAgB,IAEhDL,EAAO,aAAa,WAAY,EAAE,EAClC,MAAM,oCAAoC,EAE7C,CACH,CAAC,EAEDA,EAAO,iBAAiB,QAAS,IAAM,CACjCK,IACFL,EAAO,aAAa,WAAY,EAAE,EAClCD,EAAQ,aAAa,WAAY,EAAE,GAExB,YAAYS,EAAO,GAAI,CACtC,CAAC,EAED,SAASA,EAAMC,EAAY,CACzB,MAAMC,EAAc,KAAK,MACnBC,EAAaN,EAAmBK,EAChC,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAU,EAK9D,GAJAV,EAAO,YAAcgB,EAAeL,CAAI,EACxCV,EAAQ,YAAce,EAAeJ,CAAK,EAC1CV,EAAU,YAAcc,EAAeH,CAAO,EAC9CV,EAAU,YAAca,EAAeF,CAAO,EAC1CJ,GAAc,EAAG,CACnB,cAAcF,CAAU,EACxBR,EAAO,YAAc,KACvBC,EAAQ,YAAc,KACtBC,EAAU,YAAc,KACxBC,EAAU,YAAc,KACtBL,EAAQ,gBAAgB,UAAU,EAClC,MACD,CACH,CACA,SAASiB,EAAUE,EAAI,CAQrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}